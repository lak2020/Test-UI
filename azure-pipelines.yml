trigger:
  branches:
    include:
      - master

pool:
  name: Default

steps:
  - checkout: self

  # Set up Node.js version 18.x (which is required by Playwright)
  - task: NodeTool@1
    inputs:
      versionSpec: '18.x'
    displayName: 'Setup Node.js'

  # Verify Node.js version to make sure it's 18.x or higher
  - script: node -v
    displayName: 'Check Node.js Version'

  # Clean node_modules and npm cache to avoid dependency issues
  - script: |
      echo "Cleaning node_modules and npm cache"
      rmdir /s /q node_modules  # Remove existing node_modules
      npm cache clean --force   # Clean npm cache
    displayName: 'Clean node_modules and npm cache'

  # Reinstall dependencies
  - script: npm install
    displayName: 'Install Dependencies'

  # Install Playwright Browsers (ensure Playwright installs properly)
  - script: npx playwright install --with-deps
    displayName: 'Install Playwright Browsers'

  # Run individual test cases with Playwright
  - script: npx playwright test tests/TestCase1.spec.ts
    displayName: 'Run TestCase1'

  - script: npx playwright test tests/TestCase2.spec.ts
    displayName: 'Run TestCase2'

  - script: npx playwright test tests/TestCase3.spec.ts
    displayName: 'Run TestCase3'

  # Publish test results to Azure DevOps (even if tests fail)
  - task: PublishTestResults@2
    inputs:
      testResultsFiles: '**/test-results/*.xml'
      testRunTitle: 'Playwright Test Results'
    condition: always()

  # Publish Playwright report to Azure DevOps (even if tests fail)
  - task: PublishBuildArtifacts@1
    inputs:
      pathToPublish: 'playwright-report'
      artifactName: 'Playwright Report'
    condition: always()
